from collections import Counter
from itertools import chain


def make_substring(index, string):
    substrings = []
    c = 1
    while (c < len(string) - index + 1):
        substrings.append(string[index:index + c])
        c += 1
    return substrings


def counter_substring(seq_list):
    return Counter(seq_list)


def result_score(final_dict):
    sum = 0
    for s in final_dict.values():
        sum += s
    return sum


# Kevin part
def kevin_vowel(string: str):
    found_list = []
    vowels = list("aeuoi")
    counter_index = -1
    for el in string:
        counter_index = counter_index + 1
        if el in vowels:
            found_list.append(make_substring(counter_index, string))
    found_list = list(chain(*found_list))
    word_dict = counter_substring(found_list)
    result = result_score(word_dict)
    return result


# Stuart part
def stuart_consonant(string: str):
    found_list = []
    consonant = list("bcdfghjklmnpqrstvwxyz")
    counter_index = -1
    for el in string:
        counter_index = counter_index + 1
        if el in consonant:
            found_list.append(make_substring(counter_index, string))
    found_list = list(chain(*found_list))
    word_dict = counter_substring(found_list)
    result = result_score(word_dict)
    return result


def minion_game_complicated(string: str):
    string = string.lower()
    stuart_scores = stuart_consonant(string)
    kevin_scores = kevin_vowel(string)
    if stuart_scores > kevin_scores:
        print(f"Stuart {stuart_scores}")
    if kevin_scores > stuart_scores:
        print(f"Kevin {kevin_scores}")
    if kevin_scores == stuart_scores:
        print("Draw")


def minion_game(string):

    vowels = 'AEIOU'
    kevsc = 0
    stusc = 0
    for i in range(len(s)):
        if s[i] in vowels:
            kevsc += (len(s)-i)
        else:
            stusc += (len(s)-i)

    if kevsc > stusc:
        print("Kevin", kevsc)
    elif kevsc < stusc:
        print("Stuart", stusc)
    else:
        print("Draw")


if __name__ == '__main__':
    string = input()
    minion_game(string)
